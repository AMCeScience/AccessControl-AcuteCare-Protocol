# Generated by Django 2.2.5 on 2020-05-29 14:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'patient'), (2, 'ambulance'), (3, 'call_centre'), (4, 'hospital'), (5, 'org_admin')], default=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Care_Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('care_team_name', models.CharField(max_length=32, null=True)),
                ('care_team_tag', models.CharField(default='', max_length=32, null=True)),
                ('care_team_is_active', models.BooleanField(null=True)),
                ('care_team_category', models.CharField(max_length=100, null=True)),
                ('care_team_start_datetime', models.DateTimeField(null=True)),
                ('care_team_end_datetime', models.DateTimeField(null=True)),
                ('care_team_reason_code', models.IntegerField(null=True)),
                ('care_team_telecom', models.IntegerField(null=True)),
                ('care_team_note', models.CharField(max_length=100, null=True)),
                ('care_team_current_location', models.CharField(max_length=32, null=True)),
                ('care_team_time_to_revoke', models.IntegerField(default=True, null=True)),
                ('care_team_breakglass', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('patient_active', models.BooleanField(default=False, null=True, verbose_name='Active')),
                ('patient_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Name')),
                ('patient_surname', models.CharField(blank=True, max_length=32, null=True, verbose_name='Surname')),
                ('patient_BSN', models.IntegerField(blank=True, null=True, verbose_name='BSN')),
                ('patient_telecom', models.CharField(blank=True, max_length=32, null=True, verbose_name='Phone Number')),
                ('patient_gender', models.CharField(blank=True, choices=[('unknown', 'Unknown'), ('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='unknown', max_length=20, null=True, verbose_name='Gender')),
                ('patient_birthDate', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('patient_address', models.CharField(blank=True, max_length=32, null=True, verbose_name='Address')),
                ('patient_zipcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='Zip Code')),
                ('patient_maritalStatus', models.CharField(blank=True, choices=[('UNK', 'Unknown'), ('M', 'Married'), ('S', 'Never Married'), ('D', 'Divorced'), ('A', 'Annulled'), ('W', 'Widowed'), ('U', 'Unmarried'), ('T', 'Domestic partner'), ('P', 'Polygamous'), ('I', 'Interlocutory'), ('L', 'Legally Separated')], default='UNK', max_length=10, verbose_name='Marital Status')),
                ('patient_photo', models.ImageField(blank=True, null=True, upload_to='patient_pic', verbose_name='Profile Picture')),
                ('patient_communication_language', models.CharField(blank=True, choices=[('en', 'English'), ('ar', 'Arabic'), ('bn', 'Bengali'), ('cs', 'Czech'), ('da', 'Danish'), ('de', 'German'), ('de-AT', 'German (Austria)'), ('de-CH', 'German (Switzerland'), ('de-DE', 'German (Germany'), ('el', 'Greek'), ('en-AU', 'English (Australia)'), ('en-CA', 'English (Canada)'), ('en-GB', 'English (Great Britain)'), ('en-IN', 'English (India)'), ('en-NZ', 'English (New Zeland)'), ('en-SG', 'English (Singapore)'), ('en-US', 'English (United States)'), ('es', 'Spanish'), ('es-AR', 'Spanish (Argentina)'), ('es-ES', 'Spanish (Spain)'), ('es-UY', 'Spanish (Uruguay)'), ('fi', 'Finnish'), ('fr', 'French'), ('fr-BE', 'French (Belgium)'), ('fr-CH', 'French (Switzerland)'), ('fr-FR', 'French (France)'), ('fy', 'Frysian'), ('fy-NL', 'Frysian (Netherlands)'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('it', 'Italian'), ('it-CH', 'Italian (Switzerland)'), ('it-IT', 'Italian (Italy)'), ('ja', 'Japanese'), ('ko', 'Korean'), ('nl', 'Dutch'), ('nl-BE', 'Dutch (Belgium)'), ('nl-NL', 'Dutch (Netherlands)'), ('no', 'Norwegian'), ('no-NO', 'Norwegian (Norway)'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-BR', 'Portuguese (Brazil)'), ('ru', 'Russian'), ('ru-RU', 'Russian (Russia)'), ('sr', 'Serbian'), ('sr-RS', 'Serbian (Serbia)'), ('sv', 'Swedish'), ('sv-SE', 'Swedish (Sweden)'), ('te', 'Telegu'), ('zh', 'Chinese'), ('zh-CN', 'Chinese (China)'), ('zh-HK', 'Chinese (Hong Kong)'), ('zh-SG', 'Chinese (Singapore)'), ('zh-TW', 'Chinese (Taiwan)')], default='en', max_length=10, null=True, verbose_name='Communication Language')),
                ('patient_contact_name', models.CharField(max_length=200, null=True, verbose_name='Name')),
                ('patient_contact_relationship', models.CharField(choices=[('U', 'Unknown'), ('C', 'Emergency Contact'), ('E', 'Employer'), ('F', 'Federal Agency'), ('I', 'Insurance Company'), ('N', 'Next-of-Kin'), ('S', 'State Agency')], default='U', max_length=20, null=True, verbose_name='Relationship')),
                ('patient_contact_telecom', models.CharField(max_length=200, null=True, verbose_name='Phone Number')),
                ('patient_contact_zipcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Zip Code')),
                ('patient_contact_address', models.CharField(max_length=200, null=True, verbose_name='Address')),
                ('patient_contact_gender', models.CharField(choices=[('unknown', 'Unknown'), ('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='unknown', max_length=20, null=True, verbose_name='Gender')),
                ('patient_lasttime_updated', models.DateTimeField(null=True, verbose_name='Last Time Updated')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('organization_active', models.BooleanField(null=True)),
                ('organization_type', models.PositiveSmallIntegerField(choices=[(1, 'Unspecified'), (2, 'Ambulance Service'), (3, 'Call Centre Service'), (4, 'Hospital Service')], default=1, null=True)),
                ('organization_name', models.CharField(max_length=32, null=True)),
                ('organization_alias', models.CharField(max_length=32, null=True)),
                ('organization_telecom', models.CharField(max_length=32, null=True)),
                ('organization_zipcode', models.CharField(max_length=32, null=True)),
                ('organization_address', models.CharField(max_length=32, null=True)),
                ('organization_country', models.CharField(max_length=32, null=True)),
                ('organization_city', models.CharField(max_length=32, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('employee_type', models.PositiveSmallIntegerField(null=True)),
                ('employee_name', models.CharField(max_length=32, null=True)),
                ('employee_surname', models.CharField(max_length=32, null=True)),
                ('employee_BSN', models.CharField(max_length=16, null=True)),
                ('employee_email', models.EmailField(max_length=32, null=True)),
                ('employee_role', models.CharField(max_length=32, null=True)),
                ('employee_department', models.CharField(max_length=32, null=True)),
                ('employee_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_model.Organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Care_Team_Participants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_role', models.CharField(max_length=100, null=True)),
                ('care_team_responsible', models.BooleanField(null=True)),
                ('participating', models.BooleanField(null=True)),
                ('added_date', models.DateTimeField(null=True)),
                ('care_team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='care', to='db_model.Care_Team')),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_model.Employee')),
            ],
        ),
        migrations.AddField(
            model_name='care_team',
            name='care_team_organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='db_model.Organization'),
        ),
    ]
